apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: test.platoe.io
  annotations:
   nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: "test.platoe.io"
  - http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: test-django-service
            port:
              number: 80


---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: nfs-static-pv
spec:
  storageClassName: nfs-static-volume
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  nfs:
    server: dbtest.platoe.io
    path: /mnt/nfs_share/static

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: nfs-media-pv
spec:
  storageClassName: nfs-media-volume
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  nfs:
    server: dbtest.platoe.io
    path: /mnt/nfs_share/media

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nfs-static-pvc
spec:
  storageClassName: nfs-static-volume
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi


---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nfs-media-pvc
spec:
  storageClassName: nfs-media-volume
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: django-settings
data:
  DEBUG: "0"
  DJANGO_LOG_LEVEL: "DEBUG"
  DJANGO_SETTINGS_MODULE: "test-settings"
  DB_PASSWORD: "ajij%@6gav82!hsA8V8j7"




---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test.django
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-django
  template:
    metadata:
      labels:
        app: test-django
    spec:
      volumes:
        - name: media-claim
          persistentVolumeClaim:
            claimName: nfs-media-pvc
        - name: static-claim
          persistentVolumeClaim:
            claimName: nfs-static-pvc
      containers:
      - name: test-django
        image: phx.ocir.io/id3kyspkytmr/test-platoe/test-django:latest
        envFrom:
          - configMapRef:
              name: django-settings
        ports:
        - name: port80
          containerPort: 80
        volumeMounts:
          - name: static-claim
            mountPath: /platoe/static_volume
          - name: media-claim
            mountPath: /platoe/media_volume
       # - name: port443
       #   containerPort: 443
      restartPolicy: Always
      imagePullSecrets:
      # enter the name of the secret you created
      - name: ocirsecret

---

kind: Service
apiVersion: v1
metadata:
  name: test-django-service
spec:
  type: NodePort
  selector:
    app: test-django
  ports:
    - port: 80
      targetPort: 8000
